name: Run GPT Model on macOS with Cache

on:
  workflow_dispatch:

jobs:
  run:
    runs-on: macos-15  # Apple Silicon (M1/M2)

    steps:
      - name: Checkout your repo
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install Hugging Face CLI + dependencies
        run: pip install 'huggingface_hub[cli]'

      - name: Clone gpt-oss repository
        run: git clone https://github.com/openai/gpt-oss.git

      - name: Install gpt-oss with Metal backend
        run: |
          cd gpt-oss
          pip install .[metal]
          cd ..

      - name: Cache GPT-OSS model weight parts
        id: cache-model
        uses: actions/cache@v4
        with:
          path: gpt-oss-20b/metal/parts
          key: gpt-oss-metal-parts-v1

      - name: Download and split model weights (if cache miss)
        if: steps.cache-model.outputs.cache-hit != 'true'
        run: |
          mkdir -p gpt-oss-20b/metal
          hf download openai/gpt-oss-20b \
            --include "metal/model.bin" \
            --repo-type model \
            --local-dir gpt-oss-20b/metal

          mkdir -p gpt-oss-20b/metal/parts
          split -b 1900m gpt-oss-20b/metal/model.bin gpt-oss-20b/metal/parts/model.bin.part_
          rm gpt-oss-20b/metal/model.bin

      - name: Reconstruct model.bin from cached parts
        run: |
          mkdir -p gpt-oss-20b/metal
          cat gpt-oss-20b/metal/parts/model.bin.part_* > gpt-oss-20b/metal/model.bin
          ls -lh gpt-oss-20b/metal/model.bin

      - name: Run GPT-OSS-20B with Metal backend
        run: |
          cd gpt-oss
          python - <<EOF
from gpt_oss.metal.examples.generate import main
main('../gpt-oss-20b/metal/model.bin', prompt="Hello from GitHub Actions!")
EOF
